/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */

html {
  font-family: sans-serif;
  line-height: 1.15;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
}

article,
aside,
footer,
header,
nav,
section {
  display: block;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

figcaption,
figure {
  display: block;
}

figure {
  margin: 1em 40px;
}

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

main {
  display: block;
}

pre {
  font-family: monospace, monospace;
  font-size: 1em;
}

a {
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
}

a:active,
a:hover {
  outline-width: 0;
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  text-decoration: underline dotted;
}

b,
strong {
  font-weight: inherit;
}

b,
strong {
  font-weight: bolder;
}

code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

dfn {
  font-style: italic;
}

mark {
  background-color: #ff0;
  color: #000;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

audio,
video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

img {
  border-style: none;
}

svg:not(:root) {
  overflow: hidden;
}

button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
}

button {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

input {
  overflow: visible;
}

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  box-sizing: border-box;
  display: table;
  max-width: 100%;
  padding: 0;
  color: inherit;
  white-space: normal;
}

progress {
  display: inline-block;
  vertical-align: baseline;
}

textarea {
  overflow: auto;
}

details {
  display: block;
}

summary {
  display: list-item;
}

menu {
  display: block;
}

canvas {
  display: inline-block;
}

template {
  display: none;
}

[hidden] {
  display: none;
}

header .main-navigation li a {
  font-size: 16px;
  font-weight: bold;
}

.title-part h1 {
  font-size: 35px;
  font-weight: bold;
}

.single-post p {
  font-size: 15px;
  font-weight: bold;
  line-height: 30px;
  font-family: Arial, Helvetica, sans-serif;
}

.widget-area section a {
  font-size: 16px;
  font-weight: bold;
}

.widget-area section .widget-title {
  font-size: 20px;
  font-weight: bold;
}

.post .entry-title {
  font-size: 26px;
  line-height: 30px;
  font-weight: bold;
}

footer#colophon {
  font-size: 14px;
  font-weight: bold;
}

footer#colophon .main-footer h2 {
  font-size: 18px;
  font-weight: bold;
}

footer#colophon .main-footer .textwidget {
  font-size: 13px;
  font-weight: bold;
}

footer#colophon .footer-navigation a {
  font-size: 16px;
  font-weight: bold;
}

.pagination {
  font-size: 20px;
  font-weight: bold;
  text-transform: uppercase;
}

ul,
ol,
h1,
h2,
h3 {
  padding: 0;
  margin: 0;
}

.body-wrapper {
  max-width: 1670px;
  margin: 0 auto;
  padding: 15px;
}

.body-wrapper ul {
  list-style-type: none;
}

.body-wrapper a {
  text-decoration: none;
}

.body-wrapper .site-content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  width: 100%;
  padding-top: 78px;
}

.body-wrapper .site-content .content-area {
  width: 67.2%;
  box-sizing: border-box;
}

.body-wrapper .site-content .widget-area {
  width: 31%;
  box-sizing: border-box;
}

.body-wrapper .site-content .widget-area .popular-widget .pop-widget-tabs {
  display: none;
}

.body-wrapper .site-content .widget-area .popular-widget .pop-inside {
  border: none;
}

.body-wrapper .site-content .widget-area .popular-widget .pop-inside ul li {
  border: none;
  float: none;
  width: 100%;
  margin: 0;
}

.body-wrapper .site-content .widget-area .popular-widget .pop-inside ul li:before {
  display: none;
}

.body-wrapper .site-content .widget-area .popular-widget .pop-inside ul li a {
  display: block;
  padding: 0;
}

.body-wrapper .site-content .widget-area section {
  background-color: #403f46;
  margin-bottom: 30px;
  padding: 35px;
}

.body-wrapper .site-content .widget-area section .widget-title {
  color: #ffea00;
  text-transform: uppercase;
  line-height: 21px;
  padding-bottom: 35px;
}

.body-wrapper .site-content .widget-area .search-form {
  padding: 21px 0;
}

.body-wrapper .site-content .widget-area .search-form .search-field {
  border-radius: 14px;
  padding: 8px 0 6px 25px;
}

.body-wrapper .site-content .widget-area .widget ul {
  text-align: left;
  width: 100%;
}

.body-wrapper .site-content .widget-area .widget ul::after {
  content: '';
  display: table;
  clear: both;
}

.body-wrapper .site-content .widget-area .widget ul li {
  float: left;
  width: 50%;
  box-sizing: border-box;
  margin-bottom: 15px;
}

.body-wrapper .site-content .widget-area .widget ul li:before {
  content: '';
  background: url("../images/arrow.png") no-repeat center;
  width: 31px;
  height: 31px;
  display: block;
  float: left;
}

.body-wrapper .site-content .widget-area .widget ul li a {
  color: #ffffff;
  font-size: 13px;
  font-weight: bold;
  text-transform: uppercase;
  line-height: 21px;
  display: inline-block;
  padding-top: 6px;
  margin-left: 15px;
}

.body-wrapper .site-content .widget-area .tagcloud {
  text-align: left;
}

.body-wrapper .site-content .widget-area .tagcloud a {
  padding: 6px 10px;
  color: #424147;
  background-color: #ffea00;
  margin: 2px 1px;
  text-transform: uppercase;
  line-height: 20px;
  display: inline-block;
}

.body-wrapper .dpsp-networks-btns-wrapper li {
  padding-right: 26px;
}

.body-wrapper .dpsp-has-button-background .dpsp-networks-btns-wrapper .dpsp-facebook,
.body-wrapper .dpsp-has-button-background .dpsp-networks-btns-wrapper .dpsp-twitter,
.body-wrapper .dpsp-has-button-background .dpsp-networks-btns-wrapper .dpsp-google-plus,
.body-wrapper .dpsp-has-button-background .dpsp-networks-btns-wrapper .dpsp-pinterest {
  background: yellow;
  border-color: yellow;
}

.body-wrapper .dpsp-has-icon-background .dpsp-networks-btns-wrapper .dpsp-facebook:before,
.body-wrapper .dpsp-has-icon-background .dpsp-networks-btns-wrapper .dpsp-twitter:before,
.body-wrapper .dpsp-has-icon-background .dpsp-networks-btns-wrapper .dpsp-twitter:before,
.body-wrapper .dpsp-has-icon-background .dpsp-networks-btns-wrapper .dpsp-google-plus:before,
.body-wrapper .dpsp-has-icon-background .dpsp-networks-btns-wrapper .dpsp-pinterest:before {
  background-color: black;
  border-color: black;
}

.body-wrapper .dpsp-networks-btns-wrapper .dpsp-network-btn:before {
  border: 3px solid;
}

.body-wrapper .dpsp-networks-btns-wrapper .dpsp-network-btn:before {
  width: 30px;
  font-size: 13px;
  line-height: 27px;
}

.body-wrapper .dpsp-networks-btns-wrapper .dpsp-network-btn {
  height: 29px;
  min-width: 30px;
}

.body-wrapper #dpsp-content-bottom {
  margin: 0 0 50px;
}

.body-wrapper #dpsp-content-bottom::after {
  content: '';
  display: table;
  clear: both;
}

.body-wrapper #dpsp-content-bottom .dpsp-share-text {
  float: left;
  display: inline-block;
  background-color: #424147;
  color: #ffea00;
  font-size: 18px;
  text-transform: uppercase;
  font-weight: bold;
  padding: 9px 35px 8px 20px;
  margin-bottom: 25px;
}

.body-wrapper #dpsp-content-bottom ul {
  float: right;
}

.body-wrapper #dpsp-content-bottom ul .dpsp-network-label-wrapper {
  margin: auto;
}

.site-header {
  padding: 37px 0 22px;
}

.site-header .logo-nav::after {
  content: '';
  display: table;
  clear: both;
}

.site-header .logo-nav .logo {
  display: block;
  padding-left: 119px;
  float: left;
}

.site-header .logo-nav .main-navigation {
  float: right;
  padding-right: 80px;
  padding-top: 25px;
  clear: none;
  width: auto;
}

.site-header .logo-nav .main-navigation::after {
  content: '';
  display: table;
  clear: both;
}

.site-header .logo-nav .main-navigation li {
  float: left;
  margin: 0 30px;
}

.site-header .logo-nav .main-navigation li a {
  box-sizing: border-box;
  padding: 21px 10px;
}

footer#colophon .main-footer>.container {
  padding: 30px 110px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
}

footer#colophon .main-footer>.container .widgets-inner {
  width: 33.33%;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(1) .widget-item:nth-child(1) h2 {
  margin-bottom: 20px;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(1) .widget-item:nth-child(1) .textwidget {
  line-height: 21px;
  max-width: 410px;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(1) .widget-item:nth-child(2) .textwidget {
  display: inline-block;
  margin: 28px 0 40px;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(1) .widget-item:nth-child(2) .textwidget a {
  display: inline-block;
  padding: 10px 18px;
  border-bottom: 2px solid #ffea00;
  font-size: 15px;
  font-weight: bold;
  text-decoration: none;
  color: #ffffff;
  background-color: #000000;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(1) .widget-item:nth-child(3) .bwg_standart_thumbnails_0 {
  text-align: left !important;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(1) .widget-item:nth-child(3) h2 {
  margin-bottom: 14px;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(2) {
  padding-left: 44px;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(2) .widget-item:nth-child(2) {
  margin-top: 350px;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(2) .widget-item:nth-child(2)>div,
footer#colophon .main-footer>.container .widgets-inner:nth-child(2) .widget-item:nth-child(2) h2 {
  display: inline-block !important;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(2) .widget-item:nth-child(2)>div a {
  padding: 0 1px !important;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(2) .widget-item:nth-child(2)>div a span {
  border-radius: 0 !important;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) {
  padding-left: 124px;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(1) h2 {
  margin-bottom: 50px;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(1) .contact-adress {
  margin-bottom: 20px;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(1) .contact-adress:before {
  display: block;
  content: '';
  width: 30px;
  height: 30px;
  background: url("../images/adress.png") no-repeat center;
  float: left;
  margin: -5px 17px 0 0;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(1) .contact-phone {
  margin-bottom: 28px;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(1) .contact-phone>div {
  float: left;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(1) .contact-phone:before {
  display: block;
  content: '';
  width: 30px;
  height: 30px;
  background: url("../images/phone.png") no-repeat center;
  float: left;
  margin: -5px 17px 0 0;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(1) .contact-phone:after {
  clear: both;
  content: '';
  display: table;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(1) .contact-email:before {
  display: block;
  content: '';
  width: 30px;
  height: 30px;
  background: url("../images/email.png") no-repeat center;
  float: left;
  margin: -5px 17px 0 0;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(2) h2 {
  margin: 48px 0 12px;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(3) {
  margin-top: 15px !important;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(3) form {
  max-width: 260px;
  position: relative;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(3) form input[type="email"] {
  max-width: 232px;
  height: 28px;
  float: left;
  outline: none;
  border: none;
  border-radius: 0;
  border-bottom: 2px solid #ffea00;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(3) form input[type="submit"] {
  width: 28px;
  height: 28px;
  right: 0;
  top: 0;
  position: absolute;
  outline: none;
  border: none;
  border-radius: 0;
  background: url("../images/email-icon.png") no-repeat center;
  text-indent: -1000em;
}

footer#colophon .main-footer>.container .widgets-inner:nth-child(3) .widget-item:nth-child(3) form .wpcf7-not-valid-tip {
  clear: left;
}

footer#colophon .low-footer>.container {
  padding: 0 115px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
}

footer#colophon .low-footer>.container .site-info {
  width: 50%;
  background-color: #000000;
  padding: 27px 0 25px 0;
}

footer#colophon .low-footer>.container .site-info a {
  text-decoration: none;
}

footer#colophon .low-footer>.container .footer-navigation {
  width: 50%;
}

footer#colophon .low-footer>.container .footer-navigation ul::after {
  content: '';
  display: table;
  clear: both;
}

footer#colophon .low-footer>.container .footer-navigation li {
  float: left;
}

footer#colophon .low-footer>.container .footer-navigation li:not(:last-child) {
  margin-right: 80px;
}

footer#colophon .low-footer>.container .footer-navigation li a {
  display: block;
  box-sizing: border-box;
  padding: 25px 0;
  text-decoration: none;
  text-transform: uppercase;
}

.content-area .site-main {
  padding: 0 80px;
}

.post {
  margin: 0;
}

.post .entry-header {
  background-color: #ffea00;
}

.post .entry-header::after {
  content: '';
  display: table;
  clear: both;
}

.post .entry-header img {
  max-width: 100%;
  width: 100%;
}

.post .entry-header .entry-title {
  text-transform: uppercase;
  padding: 30px 0 15px 29px;
  margin-top: -10px;
}

.post .entry-header .entry-meta {
  float: right;
  color: #000000;
  font-size: 12px;
  font-weight: bold;
  padding: 0 25px 10px 0;
}

.post .entry-header .entry-meta span {
  margin: 0 3px;
}

.post .entry-header .entry-meta .byline:after,
.post .entry-header .entry-meta .num-comments:after {
  content: '/';
  display: inline-block;
}

.post .entry-header .entry-meta a {
  color: inherit;
  text-decoration: none;
}

.post .entry-content {
  margin: 0 35px 0 30px;
  border-bottom: 1px solid #cacaca;
}

.post .entry-content p {
  padding: 15px 0;
  margin: 0;
  text-align: left;
}

.post .entry-content p img {
  padding: 15px 15px 15px 20px;
  max-width: 100%;
  margin: 0;
}

.post .entry-content .addtoany_share_save_container {
  display: none;
}

.post .entry-footer {
  display: none;
}

.site-main .post-navigation {
  display: none;
}

.similar_records {
  border-bottom: 1px solid #cacaca;
  margin: 40px 0 0 30px;
  padding-bottom: 40px;
}

.similar_records h3 {
  display: inline-block;
  background-color: #424147;
  color: #ffea00;
  font-size: 18px;
  text-transform: uppercase;
  font-weight: bold;
  padding: 9px 35px 8px 20px;
  margin-bottom: 25px;
}

.similar_records ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
}

.similar_records ul li {
  box-sizing: border-box;
  width: 33.3%;
  padding: 0 7px;
}

.similar_records ul li:first-child {
  padding-left: 0;
}

.similar_records ul li:last-child {
  padding-right: 0;
}

.similar_records ul .cell .title-related {
  color: #000000;
  font-size: 13px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: #ffea00;
  padding: 12px;
  display: block;
  margin-top: -10px;
}

.comments-area {
  padding: 50px 0 100px 30px;
}

.comments-area .count-com {
  display: inline-block;
  background-color: #424147;
  color: #ffea00;
  font-size: 18px;
  text-transform: uppercase;
  font-weight: bold;
  padding: 9px 35px 8px 20px;
  margin-bottom: 25px;
}

.comments-area .comment-list {
  border-bottom: 1px solid #cacaca;
}

.comments-area .comment-meta div {
  display: inline-block;
  padding-left: 10px;
  color: #000000;
  font-size: 16px;
  font-weight: bold;
}

.comments-area .comment-meta div a {
  color: inherit;
  text-decoration: none;
}

.comments-area .comment-meta div a:hover {
  color: inherit;
}

.comments-area .comment-meta div:nth-child(2):after,
.comments-area .comment-meta div:nth-child(3):after {
  content: '/';
  display: inline-block;
  padding-left: 10px;
}

.comments-area form {
  padding-top: 50px;
}

.comments-area form p {
  margin: 0;
}

.comments-area form .comment-form-comment {
  margin: 0;
}

.comments-area form textarea {
  padding-left: 19px;
}

.comments-area form label {
  display: inline-block;
  background-color: #424147;
  color: #ffea00;
  font-size: 18px;
  text-transform: uppercase;
  font-weight: bold;
  padding: 9px 35px 8px 20px;
  margin-bottom: 25px;
}

.comments-area form .form-submit::after {
  content: '';
  display: table;
  clear: both;
}

.comments-area form .form-submit .submit {
  float: right;
  display: inline-block;
  background-color: #000000;
  color: #ffffff;
  font-size: 15px;
  font-weight: bold;
  padding: 12px;
}

.title-part {
  background: url("../images/slider-bg.png") no-repeat center;
  background-size: cover;
  padding: 40px 0 40px 119px;
}

.title-part h1 {
  display: inline-block;
  padding: 10px 0 10px 20px;
  box-sizing: border-box;
  width: 320px;
}

.blog .wrapper .site-content {
  max-width: 1640px;
}

.blog .wrapper .entry-header h2 a {
  color: #000000;
  font-size: 23px;
  font-weight: bold;
  text-transform: uppercase;
}

.blog .wrapper .entry-header p {
  padding: 25px;
  margin: 0;
}

.blog .wrapper .similar_records {
  display: none;
}

.blog .wrapper .content-area {
  padding: 0 30px 0 0;
}

.blog .wrapper .content-area .site-main {
  padding: 0;
}

.blog .wrapper .content-area .site-main::after {
  content: '';
  display: table;
  clear: both;
}

.blog .wrapper .content-area .site-main .post {
  border-bottom: none;
  width: 50%;
  box-sizing: border-box;
  padding: 0 15px;
  margin-bottom: 30px;
}

.blog .wrapper .content-area .site-main .post:nth-child(2n+1) {
  float: left;
}

.blog .wrapper .content-area .site-main .post:nth-child(2n) {
  float: right;
}

.blog .wrapper .content-area .site-main .post.sticky {
  float: left;
}

.blog .wrapper .content-area .site-main .post.sticky .entry-content {
  display: block;
  background-color: #ffea00;
  font-size: 16px;
  font-weight: bold;
  font-style: italic;
  margin: 0;
  padding: 10px 10px 0 45px;
}

.blog .wrapper .content-area .site-main .post.sticky p {
  margin: 0;
  padding: 0;
  color: #000000;
}

.blog .wrapper .content-area .site-main .post.sticky p:first-child {
  text-transform: uppercase;
}

.blog .pagination {
  text-align: center;
}

.blog .pagination::after {
  content: '';
  display: table;
  clear: both;
}

.blog .pagination .next {
  float: right;
}

.blog .pagination .prev {
  float: left;
}

.wrapper {
  background-color: #f6f6f6;
}

body {
  background-color: white;
}

header#masthead .main-navigation li.current_page_item a,
header#masthead .main-navigation li.current_page_parent a {
  background: #ffea00;
}

header#masthead .main-navigation li a {
  color: #000000;
}

header#masthead .main-navigation li a:hover {
  background: #ffea00;
}

.site-header .main-navigation li.current_page_item a {
  background: #ffea00;
}

.site-header .main-navigation li a {
  color: #000000;
}

.site-header .main-navigation li a:hover {
  background: #ffea00;
}

.title-part h1 {
  background-color: #424146;
  color: #ffea00;
}

.post .entry-title {
  color: #000000;
}

.entry-content p {
  color: #424147;
}

footer#colophon .main-footer {
  background-color: #414146;
  color: #ffffff;
}

footer#colophon .main-footer .widgets-inner:nth-child(2) {
  padding-left: 44px;
}

footer#colophon .main-footer .widgets-inner:nth-child(2) span {
  background-color: #000000 !important;
}

footer#colophon .main-footer .widgets-inner:nth-child(3) .widget-item:nth-child(1) .contact-email span {
  color: #ffea00;
}

footer#colophon .main-footer .widgets-inner:nth-child(3) input[type="email"] {
  background-color: #414146;
  color: #ffffff;
}

footer#colophon .low-footer {
  background-color: #000000;
}

footer#colophon .low-footer .site-info {
  color: #ffffff;
}

footer#colophon .low-footer .site-info a {
  color: #ffffff;
}

footer#colophon .low-footer .footer-navigation a {
  color: #ffffff;
}

.pagination .current {
  background-color: yellow;
  padding: 10px 15px;
}

.pagination a {
  color: #414146;
  padding: 10px 15px;
}

.pagination a:hover {
  color: inherit;
  background-color: yellow;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
